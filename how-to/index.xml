<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>How-tos on Cloudprober</title>
    <link>https://cloudprober.org/how-to/</link>
    <description>Recent content in How-tos on Cloudprober</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Oct 2018 17:24:32 -0700</lastBuildDate>
    
	<atom:link href="https://cloudprober.org/how-to/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Extending Cloudprober</title>
      <link>https://cloudprober.org/how-to/extensions/</link>
      <pubDate>Mon, 29 Oct 2018 17:24:32 -0700</pubDate>
      
      <guid>https://cloudprober.org/how-to/extensions/</guid>
      <description>Cloudprober allows you to extend it across &amp;ldquo;probe&amp;rdquo; and &amp;ldquo;target&amp;rdquo; dimensions, that is, you can add new probe and target types to it without having to fork the entire codebase. Note that to extend cloudprober in this way, you will have to maintain your own cloudprober binary (which is mostly a wrapper around the &amp;ldquo;cloudprober package&amp;rdquo;), but you&amp;rsquo;ll be able to use rest of the cloudprober code from the common location.</description>
    </item>
    
    <item>
      <title>External Probe</title>
      <link>https://cloudprober.org/how-to/external-probe/</link>
      <pubDate>Sun, 08 Oct 2017 17:24:32 -0700</pubDate>
      
      <guid>https://cloudprober.org/how-to/external-probe/</guid>
      <description>External probe type allows you to run arbitrary, complex probes through Cloudprober. An external probe runs an independent external program for actual probing. Cloudprober calculates probe metrics based on program&amp;rsquo;s exit status and time elapsed in execution. Cloudprober also allows external programs to provide additional metrics over stdout.
Sample Probe To understand how it works, lets create a sample probe that sets and gets a key in a redis server.</description>
    </item>
    
  </channel>
</rss>